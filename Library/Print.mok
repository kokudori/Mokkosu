#=============================================================================
#! @file	Print.mok
#! @brief	Print
#! @author	kielnow
#=============================================================================
__define "HIDE_TYPE";

let bracket m = do print "["; m (); print "]" end;
let paren m = do print "("; m (); print ")" end;
let endl m = do m (); print "\n" end;

let sep s p lst =
  fun loop = {
      [] -> ();
      [x] -> p x;
      x::xs -> do p x; print s in loop xs; 
    }
  in loop lst;

#-----------------------------------------------------------------------------
# print_list
#-----------------------------------------------------------------------------
let print_list_with p lst   = bracket {() -> sep "," p lst};
let println_list_with p lst = endl {() -> print_list_with p lst};
let print_list lst          = print_list_with print lst;
let println_list lst        = println_list_with print lst;

#-----------------------------------------------------------------------------
# print_tuple2
#-----------------------------------------------------------------------------
let print_tuple2_with (p1,p2) (x1,x2) = paren {() -> do p1 x1; print ","; p2 x2 end};
let println_tuple2_with pp tpl        = endl {() -> print_tuple2_with pp tpl};
let print_tuple2 tpl                  = print_tuple2_with (print,print) tpl;
let println_tuple2 tpl                = println_tuple2_with (print,print) tpl;

#-----------------------------------------------------------------------------
# print_pair
#-----------------------------------------------------------------------------
let print_pair_with p tpl   = print_tuple2_with p tpl;
let println_pair_with p tpl = println_tuple2_with p tpl;
let print_pair tpl          = print_tuple2 tpl;
let println_pair tpl        = println_tuple2 tpl;

#-----------------------------------------------------------------------------
# print_tuple3
#-----------------------------------------------------------------------------
let print_tuple3_with (p1,p2,p3) (x1,x2,x3) =
  paren {() -> do p1 x1; print ","; p2 x2; print ","; p3 x3 end};
let println_tuple3_with ppp tpl = endl {() -> print_tuple3_with ppp tpl};
let print_tuple3 tpl            = print_tuple3_with (print,print,print) tpl;
let println_tuple3 tpl          = println_tuple3_with (print,print,print) tpl;

#-----------------------------------------------------------------------------
# print_tuple4
#-----------------------------------------------------------------------------
let print_tuple4_with (p1,p2,p3,p4) (x1,x2,x3,x4) =
  paren {() -> do p1 x1; print ","; p2 x2; print ","; p3 x3; print ","; p4 x4 end};
let println_tuple4_with pppp tpl = endl {() -> print_tuple4_with pppp tpl};
let print_tuple4 tpl             = print_tuple4_with (print,print,print,print) tpl;
let println_tuple4 tpl           = println_tuple4_with (print,print,print,print) tpl;

__undefine "HIDE_TYPE";
